{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h1> ID: 17k-3757 >>>>> Section: 8D >>>>> LAB 3 TASKS </h1>\n",
    "   "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2>QUESTION 2</h2>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    cities provinces\n",
      "0   Lahore    punjab\n",
      "1  Karachi     sindh\n"
     ]
    }
   ],
   "source": [
    "data = {'cities': ['Lahore','Karachi'], 'provinces': ['punjab', 'sindh']}\n",
    "frame1 = pd.DataFrame(data, index=[0,1])\n",
    "print(frame1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      cities    provinces\n",
      "0  Islamabad      capital\n",
      "1    Karachi        sindh\n",
      "2   Peshawar          KPK\n",
      "3     Quetta  Balochistan\n"
     ]
    }
   ],
   "source": [
    "data2 = {\"cities\": [\"Islamabad\",\"Karachi\",\"Peshawar\",\"Quetta\"],\n",
    "        \"provinces\":[\"capital\",\"sindh\",\"KPK\",\"Balochistan\"]}\n",
    "frame2 = pd.DataFrame(data2,index=[0,1,2,3])\n",
    "print(frame2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      cities    provinces\n",
      "0     Lahore       punjab\n",
      "1    Karachi        sindh\n",
      "0  Islamabad      capital\n",
      "2   Peshawar          KPK\n",
      "3     Quetta  Balochistan\n"
     ]
    }
   ],
   "source": [
    "frame3 = pd.concat([frame1,frame2]).drop_duplicates()\n",
    "print(frame3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "frame3 = frame3.sort_values(by=['provinces'], ascending=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cities</th>\n",
       "      <th>provinces</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Quetta</td>\n",
       "      <td>Balochistan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Peshawar</td>\n",
       "      <td>KPK</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Islamabad</td>\n",
       "      <td>capital</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Lahore</td>\n",
       "      <td>punjab</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Karachi</td>\n",
       "      <td>sindh</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      cities    provinces\n",
       "0     Quetta  Balochistan\n",
       "1   Peshawar          KPK\n",
       "2  Islamabad      capital\n",
       "3     Lahore       punjab\n",
       "4    Karachi        sindh"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "frame3.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2>QUESTION 3</h2>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    Name Field Age  Marks\n",
      "0    NaN     C        -90\n",
      "1    Ali     E         60\n",
      "2  Ahmed     E        -10\n",
      "3   Nida     C         70\n",
      "4    NaN     C         75\n"
     ]
    }
   ],
   "source": [
    "data = {'Name': [np.nan,'Ali','Ahmed','Nida',np.nan], 'Field': ['C', 'E','E','C','C'], 'Age':['','','','',''],'Marks':[-90,60,-10,70,75]}\n",
    "df = pd.DataFrame(data)\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    Name Field  Marks\n",
      "0    NaN     C    -90\n",
      "1    Ali     E     60\n",
      "2  Ahmed     E    -10\n",
      "3   Nida     C     70\n",
      "4    NaN     C     75\n"
     ]
    }
   ],
   "source": [
    "del df['Age']\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    Name Field  Marks\n",
      "0    ---     C    -90\n",
      "1    Ali     E     60\n",
      "2  Ahmed     E    -10\n",
      "3   Nida     C     70\n",
      "4    ---     C     75\n"
     ]
    }
   ],
   "source": [
    "df['Name'].replace(np.nan,'---',inplace=True)\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    Name  Field  Marks\n",
      "0    ---      0    -90\n",
      "1    Ali      1     60\n",
      "2  Ahmed      1    -10\n",
      "3   Nida      0     70\n",
      "4    ---      0     75\n"
     ]
    }
   ],
   "source": [
    "x = {\"C\":0, \"E\":1}\n",
    "df['Field']=df['Field'].map(x)\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    Name  Field  Marks\n",
      "0    ---      0    NaN\n",
      "1    Ali      1   60.0\n",
      "2  Ahmed      1    NaN\n",
      "3   Nida      0   70.0\n",
      "4    ---      0   75.0\n"
     ]
    }
   ],
   "source": [
    "df['Marks']=df['Marks'].where(df['Marks']>=0)\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    Name  Field      Marks\n",
      "0    ---      0  68.333333\n",
      "1    Ali      1  60.000000\n",
      "2  Ahmed      1  68.333333\n",
      "3   Nida      0  70.000000\n",
      "4    ---      0  75.000000\n"
     ]
    }
   ],
   "source": [
    "df['Marks'].fillna(df['Marks'].mean(),inplace=True)\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
